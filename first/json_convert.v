/* Generated by Yosys 0.9 (git sha1 UNKNOWN, clang 10.0.1 -fPIC -Os) */

(* cells_not_processed =  1  *)
(* src = "first.v:14" *)
module main(exception);
  (* src = "first.v:124" *)
  wire [31:0] _000_;
  (* src = "first.v:124" *)
  wire [26:0] _001_;
  (* src = "first.v:124" *)
  wire [31:0] _002_;
  (* src = "first.v:124" *)
  wire [26:0] _003_;
  (* src = "first.v:124" *)
  wire [31:0] _004_;
  (* src = "first.v:124" *)
  wire [26:0] _005_;
  (* src = "first.v:124" *)
  wire [31:0] _006_;
  (* src = "first.v:124" *)
  wire [26:0] _007_;
  (* src = "first.v:124" *)
  wire [31:0] _008_;
  (* src = "first.v:124" *)
  wire [26:0] _009_;
  (* src = "first.v:124" *)
  wire [31:0] _010_;
  (* src = "first.v:124" *)
  wire [26:0] _011_;
  (* src = "first.v:124" *)
  wire [31:0] _012_;
  (* src = "first.v:124" *)
  wire [26:0] _013_;
  (* src = "first.v:124" *)
  wire [31:0] _014_;
  (* src = "first.v:124" *)
  wire [26:0] _015_;
  (* src = "first.v:124" *)
  wire [31:0] _016_;
  (* src = "first.v:124" *)
  wire [26:0] _017_;
  (* src = "first.v:124" *)
  wire [31:0] _018_;
  (* src = "first.v:124" *)
  wire [26:0] _019_;
  (* src = "first.v:124" *)
  wire [31:0] _020_;
  (* src = "first.v:124" *)
  wire [26:0] _021_;
  (* src = "first.v:124" *)
  wire [31:0] _022_;
  (* src = "first.v:124" *)
  wire [26:0] _023_;
  (* src = "first.v:124" *)
  wire [31:0] _024_;
  (* src = "first.v:124" *)
  wire [26:0] _025_;
  (* src = "first.v:124" *)
  wire [31:0] _026_;
  (* src = "first.v:124" *)
  wire [26:0] _027_;
  (* src = "first.v:124" *)
  wire [31:0] _028_;
  (* src = "first.v:124" *)
  wire [26:0] _029_;
  (* src = "first.v:124" *)
  wire [31:0] _030_;
  (* src = "first.v:124" *)
  wire [26:0] _031_;
  (* src = "first.v:124" *)
  wire [31:0] _032_;
  (* src = "first.v:124" *)
  wire [26:0] _033_;
  (* src = "first.v:124" *)
  wire [31:0] _034_;
  (* src = "first.v:124" *)
  wire [26:0] _035_;
  (* src = "first.v:124" *)
  wire [31:0] _036_;
  (* src = "first.v:124" *)
  wire [26:0] _037_;
  (* src = "first.v:124" *)
  wire [31:0] _038_;
  (* src = "first.v:124" *)
  wire [26:0] _039_;
  (* src = "first.v:124" *)
  wire [31:0] _040_;
  (* src = "first.v:124" *)
  wire [26:0] _041_;
  (* src = "first.v:124" *)
  wire [31:0] _042_;
  (* src = "first.v:124" *)
  wire [26:0] _043_;
  (* src = "first.v:124" *)
  wire [31:0] _044_;
  (* src = "first.v:124" *)
  wire [26:0] _045_;
  (* src = "first.v:124" *)
  wire [31:0] _046_;
  (* src = "first.v:124" *)
  wire [26:0] _047_;
  (* src = "first.v:124" *)
  wire [31:0] _048_;
  (* src = "first.v:124" *)
  wire [26:0] _049_;
  (* src = "first.v:124" *)
  wire [31:0] _050_;
  (* src = "first.v:124" *)
  wire [26:0] _051_;
  (* src = "first.v:124" *)
  wire [31:0] _052_;
  (* src = "first.v:124" *)
  wire [26:0] _053_;
  (* src = "first.v:124" *)
  wire [31:0] _054_;
  (* src = "first.v:124" *)
  wire [26:0] _055_;
  (* src = "first.v:124" *)
  wire [31:0] _056_;
  (* src = "first.v:124" *)
  wire [26:0] _057_;
  (* src = "first.v:124" *)
  wire [31:0] _058_;
  (* src = "first.v:124" *)
  wire [26:0] _059_;
  (* src = "first.v:124" *)
  wire [31:0] _060_;
  (* src = "first.v:124" *)
  wire [26:0] _061_;
  (* src = "first.v:124" *)
  wire [31:0] _062_;
  (* src = "first.v:124" *)
  wire [26:0] _063_;
  (* src = "first.v:124" *)
  wire [31:0] _064_;
  (* src = "first.v:124" *)
  wire [26:0] _065_;
  (* src = "first.v:124" *)
  wire [31:0] _066_;
  (* src = "first.v:124" *)
  wire [26:0] _067_;
  (* src = "first.v:124" *)
  wire [31:0] _068_;
  (* src = "first.v:124" *)
  wire [26:0] _069_;
  (* src = "first.v:124" *)
  wire [31:0] _070_;
  (* src = "first.v:124" *)
  wire [26:0] _071_;
  (* src = "first.v:124" *)
  wire [31:0] _072_;
  (* src = "first.v:124" *)
  wire [26:0] _073_;
  (* src = "first.v:124" *)
  wire [31:0] _074_;
  (* src = "first.v:124" *)
  wire [26:0] _075_;
  (* src = "first.v:124" *)
  wire [31:0] _076_;
  (* src = "first.v:124" *)
  wire [26:0] _077_;
  (* src = "first.v:124" *)
  wire [31:0] _078_;
  (* src = "first.v:124" *)
  wire [26:0] _079_;
  (* src = "first.v:124" *)
  wire [31:0] _080_;
  (* src = "first.v:124" *)
  wire [26:0] _081_;
  (* src = "first.v:124" *)
  wire [31:0] _082_;
  (* src = "first.v:124" *)
  wire [26:0] _083_;
  (* src = "first.v:124" *)
  wire [31:0] _084_;
  (* src = "first.v:124" *)
  wire [26:0] _085_;
  (* src = "first.v:124" *)
  wire [31:0] _086_;
  (* src = "first.v:124" *)
  wire [26:0] _087_;
  (* src = "first.v:124" *)
  wire [31:0] _088_;
  (* src = "first.v:124" *)
  wire [26:0] _089_;
  (* src = "first.v:124" *)
  wire [31:0] _090_;
  (* src = "first.v:124" *)
  wire [26:0] _091_;
  (* src = "first.v:124" *)
  wire [31:0] _092_;
  (* src = "first.v:124" *)
  wire [26:0] _093_;
  (* src = "first.v:124" *)
  wire [31:0] _094_;
  (* src = "first.v:124" *)
  wire [26:0] _095_;
  (* src = "first.v:124" *)
  wire [31:0] _096_;
  (* src = "first.v:124" *)
  wire [26:0] _097_;
  (* src = "first.v:124" *)
  wire [31:0] _098_;
  (* src = "first.v:124" *)
  wire [26:0] _099_;
  (* src = "first.v:124" *)
  wire [31:0] _100_;
  (* src = "first.v:124" *)
  wire [26:0] _101_;
  (* src = "first.v:180" *)
  wire [15:0] _102_;
  (* src = "first.v:180" *)
  wire [31:0] _103_;
  (* src = "first.v:180" *)
  wire [31:0] _104_;
  (* src = "first.v:220" *)
  wire [3:0] _105_;
  (* src = "first.v:220" *)
  wire [31:0] _106_;
  (* src = "first.v:220" *)
  wire [31:0] _107_;
  (* src = "first.v:247" *)
  wire [3:0] _108_;
  (* src = "first.v:220" *)
  wire [3:0] _109_;
  (* src = "first.v:220" *)
  wire [3:0] _110_;
  (* src = "first.v:220" *)
  wire [3:0] _111_;
  (* src = "first.v:247" *)
  wire [3:0] _112_;
  (* src = "first.v:247" *)
  wire [3:0] _113_;
  (* src = "first.v:247" *)
  wire _114_;
  (* src = "first.v:180" *)
  wire _115_;
  (* src = "first.v:199" *)
  wire [42:0] _116_;
  (* src = "first.v:220" *)
  wire [15:0] _117_;
  (* src = "first.v:180" *)
  wire [31:0] _118_;
  (* src = "first.v:247" *)
  wire [63:0] _119_;
  (* src = "first.v:220" *)
  wire [2:0] _120_;
  (* src = "first.v:247" *)
  wire [15:0] _121_;
  (* src = "first.v:199" *)
  wire [15:0] _122_;
  (* src = "first.v:220" *)
  wire [15:0] _123_;
  (* src = "first.v:247" *)
  wire [31:0] _124_;
  (* src = "first.v:85" *)
  wire _125_;
  (* src = "first.v:247" *)
  wire [5:0] _126_;
  (* src = "first.v:247" *)
  wire [31:0] _127_;
  (* src = "first.v:247" *)
  wire [63:0] _128_;
  (* src = "first.v:247" *)
  wire _129_;
  (* src = "first.v:247" *)
  wire [3:0] _130_;
  (* src = "first.v:247" *)
  wire [3:0] _131_;
  (* src = "first.v:247" *)
  wire [3:0] _132_;
  (* src = "first.v:247" *)
  wire [63:0] _133_;
  (* src = "first.v:247" *)
  wire [3:0] _134_;
  (* src = "first.v:247" *)
  wire [63:0] _135_;
  (* src = "first.v:251" *)
  wire [63:0] _136_;
  (* src = "first.v:256" *)
  wire [31:0] _137_;
  (* src = "first.v:261" *)
  wire [31:0] _138_;
  (* src = "first.v:266" *)
  wire [31:0] _139_;
  (* src = "first.v:280" *)
  wire [31:0] _140_;
  (* src = "first.v:287" *)
  wire [31:0] _141_;
  (* src = "first.v:320" *)
  wire [63:0] _142_;
  (* src = "first.v:183" *)
  wire _143_;
  (* src = "first.v:189" *)
  wire _144_;
  (* src = "first.v:202" *)
  wire _145_;
  (* src = "first.v:202" *)
  wire _146_;
  (* src = "first.v:202" *)
  wire _147_;
  (* src = "first.v:213" *)
  wire _148_;
  (* src = "first.v:214" *)
  wire _149_;
  (* src = "first.v:225" *)
  wire _150_;
  (* src = "first.v:225" *)
  wire _151_;
  (* src = "first.v:241" *)
  wire _152_;
  (* src = "first.v:352" *)
  wire _153_;
  (* src = "first.v:184" *)
  wire _154_;
  (* src = "first.v:183" *)
  wire _155_;
  (* src = "first.v:213" *)
  wire _156_;
  (* src = "first.v:214" *)
  wire _157_;
  (* src = "first.v:202" *)
  wire _158_;
  (* src = "first.v:202" *)
  wire _159_;
  (* src = "first.v:225" *)
  wire _160_;
  (* src = "first.v:203" *)
  wire [26:0] _161_;
  (* src = "first.v:182" *)
  wire [31:0] _162_;
  (* src = "first.v:234" *)
  wire [31:0] _163_;
  (* src = "first.v:235" *)
  wire [31:0] _164_;
  (* src = "first.v:126" *)
  wire [31:0] _165_;
  (* src = "first.v:126" *)
  wire [26:0] _166_;
  (* src = "first.v:127" *)
  wire [31:0] _167_;
  (* src = "first.v:127" *)
  wire [26:0] _168_;
  (* src = "first.v:128" *)
  wire [31:0] _169_;
  (* src = "first.v:128" *)
  wire [26:0] _170_;
  (* src = "first.v:129" *)
  wire [31:0] _171_;
  (* src = "first.v:129" *)
  wire [26:0] _172_;
  (* src = "first.v:130" *)
  wire [31:0] _173_;
  (* src = "first.v:130" *)
  wire [26:0] _174_;
  (* src = "first.v:131" *)
  wire [31:0] _175_;
  (* src = "first.v:131" *)
  wire [26:0] _176_;
  (* src = "first.v:132" *)
  wire [31:0] _177_;
  (* src = "first.v:132" *)
  wire [26:0] _178_;
  (* src = "first.v:133" *)
  wire [31:0] _179_;
  (* src = "first.v:133" *)
  wire [26:0] _180_;
  (* src = "first.v:134" *)
  wire [31:0] _181_;
  (* src = "first.v:134" *)
  wire [26:0] _182_;
  (* src = "first.v:135" *)
  wire [31:0] _183_;
  (* src = "first.v:135" *)
  wire [26:0] _184_;
  (* src = "first.v:136" *)
  wire [31:0] _185_;
  (* src = "first.v:136" *)
  wire [26:0] _186_;
  (* src = "first.v:137" *)
  wire [31:0] _187_;
  (* src = "first.v:137" *)
  wire [26:0] _188_;
  (* src = "first.v:138" *)
  wire [31:0] _189_;
  (* src = "first.v:138" *)
  wire [26:0] _190_;
  (* src = "first.v:139" *)
  wire [31:0] _191_;
  (* src = "first.v:139" *)
  wire [26:0] _192_;
  (* src = "first.v:140" *)
  wire [31:0] _193_;
  (* src = "first.v:140" *)
  wire [26:0] _194_;
  (* src = "first.v:141" *)
  wire [31:0] _195_;
  (* src = "first.v:141" *)
  wire [26:0] _196_;
  (* src = "first.v:142" *)
  wire [31:0] _197_;
  (* src = "first.v:142" *)
  wire [26:0] _198_;
  (* src = "first.v:143" *)
  wire [31:0] _199_;
  (* src = "first.v:143" *)
  wire [26:0] _200_;
  (* src = "first.v:144" *)
  wire [31:0] _201_;
  (* src = "first.v:144" *)
  wire [26:0] _202_;
  (* src = "first.v:145" *)
  wire [31:0] _203_;
  (* src = "first.v:145" *)
  wire [26:0] _204_;
  (* src = "first.v:146" *)
  wire [31:0] _205_;
  (* src = "first.v:146" *)
  wire [26:0] _206_;
  (* src = "first.v:147" *)
  wire [31:0] _207_;
  (* src = "first.v:147" *)
  wire [26:0] _208_;
  (* src = "first.v:148" *)
  wire [31:0] _209_;
  (* src = "first.v:148" *)
  wire [26:0] _210_;
  (* src = "first.v:149" *)
  wire [31:0] _211_;
  (* src = "first.v:149" *)
  wire [26:0] _212_;
  (* src = "first.v:150" *)
  wire [31:0] _213_;
  (* src = "first.v:150" *)
  wire [26:0] _214_;
  (* src = "first.v:151" *)
  wire [31:0] _215_;
  (* src = "first.v:151" *)
  wire [26:0] _216_;
  (* src = "first.v:152" *)
  wire [31:0] _217_;
  (* src = "first.v:152" *)
  wire [26:0] _218_;
  (* src = "first.v:153" *)
  wire [31:0] _219_;
  (* src = "first.v:153" *)
  wire [26:0] _220_;
  (* src = "first.v:154" *)
  wire [31:0] _221_;
  (* src = "first.v:154" *)
  wire [26:0] _222_;
  (* src = "first.v:155" *)
  wire [31:0] _223_;
  (* src = "first.v:155" *)
  wire [26:0] _224_;
  (* src = "first.v:156" *)
  wire [31:0] _225_;
  (* src = "first.v:156" *)
  wire [26:0] _226_;
  (* src = "first.v:157" *)
  wire [31:0] _227_;
  (* src = "first.v:157" *)
  wire [26:0] _228_;
  (* src = "first.v:158" *)
  wire [31:0] _229_;
  (* src = "first.v:158" *)
  wire [26:0] _230_;
  (* src = "first.v:159" *)
  wire [31:0] _231_;
  (* src = "first.v:159" *)
  wire [26:0] _232_;
  (* src = "first.v:160" *)
  wire [31:0] _233_;
  (* src = "first.v:160" *)
  wire [26:0] _234_;
  (* src = "first.v:161" *)
  wire [31:0] _235_;
  (* src = "first.v:161" *)
  wire [26:0] _236_;
  (* src = "first.v:162" *)
  wire [31:0] _237_;
  (* src = "first.v:162" *)
  wire [26:0] _238_;
  (* src = "first.v:163" *)
  wire [31:0] _239_;
  (* src = "first.v:163" *)
  wire [26:0] _240_;
  (* src = "first.v:164" *)
  wire [31:0] _241_;
  (* src = "first.v:164" *)
  wire [26:0] _242_;
  (* src = "first.v:165" *)
  wire [31:0] _243_;
  (* src = "first.v:165" *)
  wire [26:0] _244_;
  (* src = "first.v:166" *)
  wire [31:0] _245_;
  (* src = "first.v:166" *)
  wire [26:0] _246_;
  (* src = "first.v:167" *)
  wire [31:0] _247_;
  (* src = "first.v:167" *)
  wire [26:0] _248_;
  (* src = "first.v:168" *)
  wire [31:0] _249_;
  (* src = "first.v:168" *)
  wire [26:0] _250_;
  (* src = "first.v:169" *)
  wire [31:0] _251_;
  (* src = "first.v:169" *)
  wire [26:0] _252_;
  (* src = "first.v:170" *)
  wire [31:0] _253_;
  (* src = "first.v:170" *)
  wire [26:0] _254_;
  (* src = "first.v:171" *)
  wire [31:0] _255_;
  (* src = "first.v:171" *)
  wire [26:0] _256_;
  (* src = "first.v:172" *)
  wire [31:0] _257_;
  (* src = "first.v:172" *)
  wire [26:0] _258_;
  (* src = "first.v:173" *)
  wire [31:0] _259_;
  (* src = "first.v:173" *)
  wire [26:0] _260_;
  (* src = "first.v:174" *)
  wire [31:0] _261_;
  (* src = "first.v:174" *)
  wire [26:0] _262_;
  (* src = "first.v:175" *)
  wire [31:0] _263_;
  (* src = "first.v:175" *)
  wire [26:0] _264_;
  (* src = "first.v:176" *)
  wire [31:0] _265_;
  (* src = "first.v:176" *)
  wire [26:0] _266_;
  (* src = "first.v:187" *)
  wire [15:0] _267_;
  (* src = "first.v:187" *)
  wire [31:0] _268_;
  (* src = "first.v:187" *)
  wire [31:0] _269_;
  (* src = "first.v:223" *)
  wire [3:0] _270_;
  (* src = "first.v:223" *)
  wire [31:0] _271_;
  (* src = "first.v:223" *)
  wire [31:0] _272_;
  (* src = "first.v:339" *)
  wire _273_;
  (* src = "first.v:340" *)
  wire [31:0] _274_;
  (* src = "first.v:236" *)
  wire [31:0] _275_;
  (* src = "first.v:237" *)
  wire [31:0] _276_;
  (* src = "first.v:29" *)
  wire [3:0] a;
  (* src = "first.v:42" *)
  wire [31:0] a_hi;
  (* src = "first.v:44" *)
  wire [31:0] a_lo;
  (* src = "first.v:48" *)
  wire [15:0] address;
  (* src = "first.v:65" *)
  wire [3:0] address_a;
  (* src = "first.v:33" *)
  wire [3:0] address_a_2;
  (* src = "first.v:66" *)
  wire [3:0] address_b;
  (* src = "first.v:34" *)
  wire [3:0] address_b_2;
  (* src = "first.v:67" *)
  wire [3:0] address_z;
  (* src = "first.v:35" *)
  wire [3:0] address_z_2;
  (* src = "first.v:36" *)
  wire [3:0] address_z_3;
  (* src = "first.v:30" *)
  wire [3:0] b;
  (* src = "first.v:43" *)
  wire [31:0] b_hi;
  (* src = "first.v:45" *)
  wire [31:0] b_lo;
  (* src = "first.v:51" *)
  wire [31:0] carry;
  (* src = "first.v:52" *)
  wire clk;
  (* src = "first.v:50" *)
  wire [31:0] data_in;
  (* src = "first.v:49" *)
  wire [31:0] data_out;
  (* src = "first.v:55" *)
  output exception;
  (* src = "first.v:15" *)
  wire [31:0] file_count;
  (* src = "first.v:72" *)
  wire forward_a;
  (* src = "first.v:73" *)
  wire forward_b;
  (* src = "first.v:27" *)
  wire [42:0] instruction;
  (* src = "first.v:63" *)
  wire [15:0] literal;
  (* src = "first.v:41" *)
  wire [15:0] literal_2;
  (* src = "first.v:68" *)
  wire [15:0] load_address;
  (* src = "first.v:37" *)
  wire [31:0] load_data;
  (* src = "first.v:46" *)
  wire [63:0] long_result;
  (* src = "first.v:64" *)
  wire [2:0] opcode;
  (* src = "first.v:28" *)
  wire [2:0] opcode_2;
  (* src = "first.v:59" *)
  wire [31:0] operand_a;
  (* src = "first.v:60" *)
  wire [31:0] operand_b;
  (* src = "first.v:24" *)
  wire [15:0] program_counter;
  (* src = "first.v:25" *)
  wire [15:0] program_counter_1;
  (* src = "first.v:26" *)
  wire [15:0] program_counter_2;
  (* src = "first.v:40" *)
  wire [31:0] read_input;
  (* src = "first.v:61" *)
  wire [31:0] register_a;
  (* src = "first.v:62" *)
  wire [31:0] register_b;
  (* src = "first.v:47" *)
  wire [31:0] result;
  (* src = "first.v:53" *)
  wire rst;
  (* src = "first.v:54" *)
  wire [5:0] state;
  (* src = "first.v:69" *)
  wire [15:0] store_address;
  (* src = "first.v:70" *)
  wire [31:0] store_data;
  (* src = "first.v:71" *)
  wire store_enable;
  (* src = "first.v:22" *)
  wire [31:0] timer;
  (* src = "first.v:23" *)
  wire [63:0] timer_clock;
  (* src = "first.v:32" *)
  wire write_enable;
  (* src = "first.v:38" *)
  wire [31:0] write_output;
  (* src = "first.v:39" *)
  wire [31:0] write_value;
  (* src = "first.v:31" *)
  wire [3:0] z;
  assign _136_ = timer_clock + (* src = "first.v:251" *) 32'd1;
  assign _137_ = program_counter + (* src = "first.v:256" *) 32'd1;
  assign _138_ = program_counter + (* src = "first.v:261" *) 32'd1;
  assign _139_ = program_counter + (* src = "first.v:266" *) 32'd1;
  assign _140_ = { operand_a[31:16], store_address } + (* src = "first.v:280" *) literal_2;
  assign _141_ = program_counter_2 + (* src = "first.v:287" *) 32'd1;
  assign _142_ = { operand_a[31:16], store_address } + (* src = "first.v:320" *) store_data;
  assign _143_ = state == (* src = "first.v:183" *) 3'h3;
  assign _144_ = rst == (* src = "first.v:189" *) 1'h1;
  assign _145_ = state == (* src = "first.v:202" *) 3'h1;
  assign _146_ = state == (* src = "first.v:202" *) 3'h2;
  assign _147_ = state == (* src = "first.v:202" *) 3'h3;
  assign _148_ = address_a_2 == (* src = "first.v:213" *) address_z_3;
  assign _149_ = address_b_2 == (* src = "first.v:214" *) address_z_3;
  assign _150_ = state == (* src = "first.v:225" *) 3'h2;
  assign _151_ = state == (* src = "first.v:225" *) 3'h3;
  assign store_enable = opcode_2 == (* src = "first.v:241" *) 32'd4;
  assign _153_ = rst == (* src = "first.v:352" *) 1'h1;
  assign _154_ = store_address > (* src = "first.v:184" *) 32'd1023;
  assign _155_ = store_enable && (* src = "first.v:183" *) _143_;
  assign forward_a = _148_ && (* src = "first.v:213" *) write_enable;
  assign forward_b = _149_ && (* src = "first.v:214" *) write_enable;
  assign _158_ = _145_ || (* src = "first.v:202" *) _146_;
  assign _159_ = _158_ || (* src = "first.v:202" *) _147_;
  assign _160_ = _150_ || (* src = "first.v:225" *) _151_;
  (* src = "first.v:126" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd97),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _302_ (
    .ADDR(_165_),
    .DATA(_166_)
  );
  (* src = "first.v:127" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd98),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _303_ (
    .ADDR(_167_),
    .DATA(_168_)
  );
  (* src = "first.v:128" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd99),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _304_ (
    .ADDR(_169_),
    .DATA(_170_)
  );
  (* src = "first.v:129" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd100),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _305_ (
    .ADDR(_171_),
    .DATA(_172_)
  );
  (* src = "first.v:130" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd101),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _306_ (
    .ADDR(_173_),
    .DATA(_174_)
  );
  (* src = "first.v:131" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd102),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _307_ (
    .ADDR(_175_),
    .DATA(_176_)
  );
  (* src = "first.v:132" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd103),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _308_ (
    .ADDR(_177_),
    .DATA(_178_)
  );
  (* src = "first.v:133" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd104),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _309_ (
    .ADDR(_179_),
    .DATA(_180_)
  );
  (* src = "first.v:134" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd105),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _310_ (
    .ADDR(_181_),
    .DATA(_182_)
  );
  (* src = "first.v:135" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd106),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _311_ (
    .ADDR(_183_),
    .DATA(_184_)
  );
  (* src = "first.v:136" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd107),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _312_ (
    .ADDR(_185_),
    .DATA(_186_)
  );
  (* src = "first.v:137" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd108),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _313_ (
    .ADDR(_187_),
    .DATA(_188_)
  );
  (* src = "first.v:138" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd109),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _314_ (
    .ADDR(_189_),
    .DATA(_190_)
  );
  (* src = "first.v:139" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd110),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _315_ (
    .ADDR(_191_),
    .DATA(_192_)
  );
  (* src = "first.v:140" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd111),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _316_ (
    .ADDR(_193_),
    .DATA(_194_)
  );
  (* src = "first.v:141" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd112),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _317_ (
    .ADDR(_195_),
    .DATA(_196_)
  );
  (* src = "first.v:142" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd113),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _318_ (
    .ADDR(_197_),
    .DATA(_198_)
  );
  (* src = "first.v:143" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd114),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _319_ (
    .ADDR(_199_),
    .DATA(_200_)
  );
  (* src = "first.v:144" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd115),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _320_ (
    .ADDR(_201_),
    .DATA(_202_)
  );
  (* src = "first.v:145" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd116),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _321_ (
    .ADDR(_203_),
    .DATA(_204_)
  );
  (* src = "first.v:146" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd117),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _322_ (
    .ADDR(_205_),
    .DATA(_206_)
  );
  (* src = "first.v:147" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd118),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _323_ (
    .ADDR(_207_),
    .DATA(_208_)
  );
  (* src = "first.v:148" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd119),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _324_ (
    .ADDR(_209_),
    .DATA(_210_)
  );
  (* src = "first.v:149" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd120),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _325_ (
    .ADDR(_211_),
    .DATA(_212_)
  );
  (* src = "first.v:150" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd121),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _326_ (
    .ADDR(_213_),
    .DATA(_214_)
  );
  (* src = "first.v:151" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd122),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _327_ (
    .ADDR(_215_),
    .DATA(_216_)
  );
  (* src = "first.v:152" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd123),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _328_ (
    .ADDR(_217_),
    .DATA(_218_)
  );
  (* src = "first.v:153" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd124),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _329_ (
    .ADDR(_219_),
    .DATA(_220_)
  );
  (* src = "first.v:154" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd125),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _330_ (
    .ADDR(_221_),
    .DATA(_222_)
  );
  (* src = "first.v:155" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd126),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _331_ (
    .ADDR(_223_),
    .DATA(_224_)
  );
  (* src = "first.v:156" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd127),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _332_ (
    .ADDR(_225_),
    .DATA(_226_)
  );
  (* src = "first.v:157" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd128),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _333_ (
    .ADDR(_227_),
    .DATA(_228_)
  );
  (* src = "first.v:158" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd129),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _334_ (
    .ADDR(_229_),
    .DATA(_230_)
  );
  (* src = "first.v:159" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd130),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _335_ (
    .ADDR(_231_),
    .DATA(_232_)
  );
  (* src = "first.v:160" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd131),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _336_ (
    .ADDR(_233_),
    .DATA(_234_)
  );
  (* src = "first.v:161" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd132),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _337_ (
    .ADDR(_235_),
    .DATA(_236_)
  );
  (* src = "first.v:162" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd133),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _338_ (
    .ADDR(_237_),
    .DATA(_238_)
  );
  (* src = "first.v:163" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd134),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _339_ (
    .ADDR(_239_),
    .DATA(_240_)
  );
  (* src = "first.v:164" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd135),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _340_ (
    .ADDR(_241_),
    .DATA(_242_)
  );
  (* src = "first.v:165" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd136),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _341_ (
    .ADDR(_243_),
    .DATA(_244_)
  );
  (* src = "first.v:166" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd137),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _342_ (
    .ADDR(_245_),
    .DATA(_246_)
  );
  (* src = "first.v:167" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd138),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _343_ (
    .ADDR(_247_),
    .DATA(_248_)
  );
  (* src = "first.v:168" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd139),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _344_ (
    .ADDR(_249_),
    .DATA(_250_)
  );
  (* src = "first.v:169" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd140),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _345_ (
    .ADDR(_251_),
    .DATA(_252_)
  );
  (* src = "first.v:170" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd141),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _346_ (
    .ADDR(_253_),
    .DATA(_254_)
  );
  (* src = "first.v:171" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd142),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _347_ (
    .ADDR(_255_),
    .DATA(_256_)
  );
  (* src = "first.v:172" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd143),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _348_ (
    .ADDR(_257_),
    .DATA(_258_)
  );
  (* src = "first.v:173" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd144),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _349_ (
    .ADDR(_259_),
    .DATA(_260_)
  );
  (* src = "first.v:174" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd145),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _350_ (
    .ADDR(_261_),
    .DATA(_262_)
  );
  (* src = "first.v:175" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd146),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _351_ (
    .ADDR(_263_),
    .DATA(_264_)
  );
  (* src = "first.v:176" *)
  \$meminit  #(
    .ABITS(32'd32),
    .MEMID("\\instructions"),
    .PRIORITY(32'd147),
    .WIDTH(32'd27),
    .WORDS(32'd1)
  ) _352_ (
    .ADDR(_265_),
    .DATA(_266_)
  );
  (* src = "first.v:203" *)
  \$memrd  #(
    .ABITS(32'd16),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\instructions"),
    .TRANSPARENT(32'd0),
    .WIDTH(32'd27)
  ) _353_ (
    .ADDR(program_counter),
    .CLK(1'hx),
    .DATA(_161_),
    .EN(1'hx)
  );
  (* src = "first.v:182" *)
  \$memrd  #(
    .ABITS(32'd16),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\memory"),
    .TRANSPARENT(32'd0),
    .WIDTH(32'd32)
  ) _354_ (
    .ADDR(store_address),
    .CLK(1'hx),
    .DATA(_162_),
    .EN(1'hx)
  );
  (* src = "first.v:234" *)
  \$memrd  #(
    .ABITS(32'd4),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\registers"),
    .TRANSPARENT(32'd0),
    .WIDTH(32'd32)
  ) _355_ (
    .ADDR(address_a_2),
    .CLK(1'hx),
    .DATA(register_a),
    .EN(1'hx)
  );
  (* src = "first.v:235" *)
  \$memrd  #(
    .ABITS(32'd4),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\registers"),
    .TRANSPARENT(32'd0),
    .WIDTH(32'd32)
  ) _356_ (
    .ADDR(address_b_2),
    .CLK(1'hx),
    .DATA(register_b),
    .EN(1'hx)
  );
  (* src = "first.v:187" *)
  \$memwr  #(
    .ABITS(32'd16),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\memory"),
    .PRIORITY(32'd148),
    .WIDTH(32'd32)
  ) _357_ (
    .ADDR(_267_),
    .CLK(1'hx),
    .DATA(_268_),
    .EN(_269_)
  );
  (* src = "first.v:223" *)
  \$memwr  #(
    .ABITS(32'd4),
    .CLK_ENABLE(32'd0),
    .CLK_POLARITY(32'd0),
    .MEMID("\\registers"),
    .PRIORITY(32'd149),
    .WIDTH(32'd32)
  ) _358_ (
    .ADDR(_270_),
    .CLK(1'hx),
    .DATA(_271_),
    .EN(_272_)
  );
  assign _273_ = | (* src = "first.v:339" *) timer;
  assign _274_ = timer - (* src = "first.v:340" *) 32'd1;
  assign { operand_a[31:16], store_address } = forward_a ? (* src = "first.v:236" *) result : register_a;
  assign store_data = forward_b ? (* src = "first.v:237" *) result : register_b;
  assign operand_b[0] = store_data[0];
  assign operand_b[1] = store_data[1];
  assign operand_b[2] = store_data[2];
  assign operand_b[3] = store_data[3];
  assign operand_b[4] = store_data[4];
  assign operand_b[5] = store_data[5];
  assign operand_b[6] = store_data[6];
  assign operand_b[7] = store_data[7];
  assign operand_b[8] = store_data[8];
  assign operand_b[9] = store_data[9];
  assign operand_b[10] = store_data[10];
  assign operand_b[11] = store_data[11];
  assign operand_b[12] = store_data[12];
  assign operand_b[13] = store_data[13];
  assign operand_b[14] = store_data[14];
  assign operand_b[15] = store_data[15];
  assign operand_b[16] = store_data[16];
  assign operand_b[17] = store_data[17];
  assign operand_b[18] = store_data[18];
  assign operand_b[19] = store_data[19];
  assign operand_b[20] = store_data[20];
  assign operand_b[21] = store_data[21];
  assign operand_b[22] = store_data[22];
  assign operand_b[23] = store_data[23];
  assign operand_b[24] = store_data[24];
  assign operand_b[25] = store_data[25];
  assign operand_b[26] = store_data[26];
  assign operand_b[27] = store_data[27];
  assign operand_b[28] = store_data[28];
  assign operand_b[29] = store_data[29];
  assign operand_b[30] = store_data[30];
  assign operand_b[31] = store_data[31];
  assign operand_a[0] = store_address[0];
  assign operand_a[1] = store_address[1];
  assign operand_a[2] = store_address[2];
  assign operand_a[3] = store_address[3];
  assign operand_a[4] = store_address[4];
  assign operand_a[5] = store_address[5];
  assign operand_a[6] = store_address[6];
  assign operand_a[7] = store_address[7];
  assign operand_a[8] = store_address[8];
  assign operand_a[9] = store_address[9];
  assign operand_a[10] = store_address[10];
  assign operand_a[11] = store_address[11];
  assign operand_a[12] = store_address[12];
  assign operand_a[13] = store_address[13];
  assign operand_a[14] = store_address[14];
  assign operand_a[15] = store_address[15];
  assign load_address[0] = store_address[0];
  assign load_address[1] = store_address[1];
  assign load_address[2] = store_address[2];
  assign load_address[3] = store_address[3];
  assign load_address[4] = store_address[4];
  assign load_address[5] = store_address[5];
  assign load_address[6] = store_address[6];
  assign load_address[7] = store_address[7];
  assign load_address[8] = store_address[8];
  assign load_address[9] = store_address[9];
  assign load_address[10] = store_address[10];
  assign load_address[11] = store_address[11];
  assign load_address[12] = store_address[12];
  assign load_address[13] = store_address[13];
  assign load_address[14] = store_address[14];
  assign load_address[15] = store_address[15];
  assign instruction[0] = literal[0];
  assign instruction[1] = literal[1];
  assign instruction[2] = literal[2];
  assign instruction[3] = literal[3];
  assign instruction[4] = literal[4];
  assign instruction[5] = literal[5];
  assign instruction[6] = literal[6];
  assign instruction[7] = literal[7];
  assign instruction[8] = literal[8];
  assign instruction[9] = literal[9];
  assign instruction[10] = literal[10];
  assign instruction[11] = literal[11];
  assign instruction[12] = literal[12];
  assign instruction[13] = literal[13];
  assign instruction[14] = literal[14];
  assign instruction[15] = literal[15];
  assign instruction[24] = opcode[0];
  assign instruction[25] = opcode[1];
  assign instruction[26] = opcode[2];
  assign address_z[0] = instruction[20];
  assign address_z[1] = instruction[21];
  assign address_z[2] = instruction[22];
  assign address_z[3] = instruction[23];
  assign address_b[0] = literal[0];
  assign address_b[1] = literal[1];
  assign address_b[2] = literal[2];
  assign address_b[3] = literal[3];
  assign address_a[0] = instruction[16];
  assign address_a[1] = instruction[17];
  assign address_a[2] = instruction[18];
  assign address_a[3] = instruction[19];
  assign _276_[0] = store_data[0];
  assign _276_[1] = store_data[1];
  assign _276_[2] = store_data[2];
  assign _276_[3] = store_data[3];
  assign _276_[4] = store_data[4];
  assign _276_[5] = store_data[5];
  assign _276_[6] = store_data[6];
  assign _276_[7] = store_data[7];
  assign _276_[8] = store_data[8];
  assign _276_[9] = store_data[9];
  assign _276_[10] = store_data[10];
  assign _276_[11] = store_data[11];
  assign _276_[12] = store_data[12];
  assign _276_[13] = store_data[13];
  assign _276_[14] = store_data[14];
  assign _276_[15] = store_data[15];
  assign _276_[16] = store_data[16];
  assign _276_[17] = store_data[17];
  assign _276_[18] = store_data[18];
  assign _276_[19] = store_data[19];
  assign _276_[20] = store_data[20];
  assign _276_[21] = store_data[21];
  assign _276_[22] = store_data[22];
  assign _276_[23] = store_data[23];
  assign _276_[24] = store_data[24];
  assign _276_[25] = store_data[25];
  assign _276_[26] = store_data[26];
  assign _276_[27] = store_data[27];
  assign _276_[28] = store_data[28];
  assign _276_[29] = store_data[29];
  assign _276_[30] = store_data[30];
  assign _276_[31] = store_data[31];
  assign _275_[0] = store_address[0];
  assign _275_[1] = store_address[1];
  assign _275_[2] = store_address[2];
  assign _275_[3] = store_address[3];
  assign _275_[4] = store_address[4];
  assign _275_[5] = store_address[5];
  assign _275_[6] = store_address[6];
  assign _275_[7] = store_address[7];
  assign _275_[8] = store_address[8];
  assign _275_[9] = store_address[9];
  assign _275_[10] = store_address[10];
  assign _275_[11] = store_address[11];
  assign _275_[12] = store_address[12];
  assign _275_[13] = store_address[13];
  assign _275_[14] = store_address[14];
  assign _275_[15] = store_address[15];
  assign _275_[16] = operand_a[16];
  assign _275_[17] = operand_a[17];
  assign _275_[18] = operand_a[18];
  assign _275_[19] = operand_a[19];
  assign _275_[20] = operand_a[20];
  assign _275_[21] = operand_a[21];
  assign _275_[22] = operand_a[22];
  assign _275_[23] = operand_a[23];
  assign _275_[24] = operand_a[24];
  assign _275_[25] = operand_a[25];
  assign _275_[26] = operand_a[26];
  assign _275_[27] = operand_a[27];
  assign _275_[28] = operand_a[28];
  assign _275_[29] = operand_a[29];
  assign _275_[30] = operand_a[30];
  assign _275_[31] = operand_a[31];
  assign _164_[0] = register_b[0];
  assign _164_[1] = register_b[1];
  assign _164_[2] = register_b[2];
  assign _164_[3] = register_b[3];
  assign _164_[4] = register_b[4];
  assign _164_[5] = register_b[5];
  assign _164_[6] = register_b[6];
  assign _164_[7] = register_b[7];
  assign _164_[8] = register_b[8];
  assign _164_[9] = register_b[9];
  assign _164_[10] = register_b[10];
  assign _164_[11] = register_b[11];
  assign _164_[12] = register_b[12];
  assign _164_[13] = register_b[13];
  assign _164_[14] = register_b[14];
  assign _164_[15] = register_b[15];
  assign _164_[16] = register_b[16];
  assign _164_[17] = register_b[17];
  assign _164_[18] = register_b[18];
  assign _164_[19] = register_b[19];
  assign _164_[20] = register_b[20];
  assign _164_[21] = register_b[21];
  assign _164_[22] = register_b[22];
  assign _164_[23] = register_b[23];
  assign _164_[24] = register_b[24];
  assign _164_[25] = register_b[25];
  assign _164_[26] = register_b[26];
  assign _164_[27] = register_b[27];
  assign _164_[28] = register_b[28];
  assign _164_[29] = register_b[29];
  assign _164_[30] = register_b[30];
  assign _164_[31] = register_b[31];
  assign _163_[0] = register_a[0];
  assign _163_[1] = register_a[1];
  assign _163_[2] = register_a[2];
  assign _163_[3] = register_a[3];
  assign _163_[4] = register_a[4];
  assign _163_[5] = register_a[5];
  assign _163_[6] = register_a[6];
  assign _163_[7] = register_a[7];
  assign _163_[8] = register_a[8];
  assign _163_[9] = register_a[9];
  assign _163_[10] = register_a[10];
  assign _163_[11] = register_a[11];
  assign _163_[12] = register_a[12];
  assign _163_[13] = register_a[13];
  assign _163_[14] = register_a[14];
  assign _163_[15] = register_a[15];
  assign _163_[16] = register_a[16];
  assign _163_[17] = register_a[17];
  assign _163_[18] = register_a[18];
  assign _163_[19] = register_a[19];
  assign _163_[20] = register_a[20];
  assign _163_[21] = register_a[21];
  assign _163_[22] = register_a[22];
  assign _163_[23] = register_a[23];
  assign _163_[24] = register_a[24];
  assign _163_[25] = register_a[25];
  assign _163_[26] = register_a[26];
  assign _163_[27] = register_a[27];
  assign _163_[28] = register_a[28];
  assign _163_[29] = register_a[29];
  assign _163_[30] = register_a[30];
  assign _163_[31] = register_a[31];
  assign _157_ = forward_b;
  assign _156_ = forward_a;
  assign _152_ = store_enable;
endmodule
